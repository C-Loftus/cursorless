languageId: typescript
command:
  spokenForm: take inside pair
  version: 2
  targets:
    - type: primitive
      modifiers:
        - {type: interiorOnly}
        - type: containingScope
          scopeType: {type: surroundingPair, delimiter: any}
  usePrePhraseSnapshot: true
  action: {name: setSelection}
initialState:
  documentContents: |
    async (editor, targets) => {
        const edits = targets.map((target, i) =>(
        text: i%2 === 0?left:right
        )
    }
  #             1         2         3         4
  #   012345678901234567890123456789012345678901234
  #  +---------------------------------------------
  # 0|async (editor, targets) => {
  # 1|    const edits = targets.map((target, i) =>(
  # 2|    text: i%2 === 0?left:right
  # 3|    )
  # 4|}
  # 5|
  #  +---------------------------------------------
  #   012345678901234567890123456789012345678901234
  #             1         2         3         4
  selections:
    - anchor: {line: 2, character: 8}
      active: {line: 2, character: 8}
  marks: {}
finalState:
  documentContents: |
    async (editor, targets) => {
        const edits = targets.map((target, i) =>(
        text: i%2 === 0?left:right
        )
    }
  #             1         2         3         4
  #   012345678901234567890123456789012345678901234
  #  +---------------------------------------------
  # 0|async (editor, targets) => {
  # 1|    const edits = targets.map((target, i) =>(
  # 2|    text: i%2 === 0?left:right
  # 3|    )
  # 4|}
  # 5|
  #  +---------------------------------------------
  #   012345678901234567890123456789012345678901234
  #             1         2         3         4
  selections:
    - anchor: {line: 2, character: 4}
      active: {line: 2, character: 30}
