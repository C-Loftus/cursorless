languageId: scala
command:
  version: 1
  spokenForm: change type odd
  action: clearAndSetSelection
  targets:
    - type: primitive
      modifier: {type: containingScope, scopeType: type, includeSiblings: false}
      mark: {type: decoratedSymbol, symbolColor: default, character: o}
initialState:
  documentContents: |
    class TypesAhoy() {
      f match {
        case foo: Foo => 12
      }
    }
  #             1         2
  #   01234567890123456789012
  #  +-----------------------
  # 0|class TypesAhoy() {
  # 1|  f match {
  # 2|    case foo: Foo => 12
  # 3|  }
  # 4|}
  # 5|
  #  +-----------------------
  #   01234567890123456789012
  #             1         2
  selections:
    - anchor: {line: 0, character: 0}
      active: {line: 0, character: 0}
  marks:
    default.o:
      start: {line: 2, character: 9}
      end: {line: 2, character: 12}
finalState:
  documentContents: |
    class TypesAhoy() {
      f match {
        case foo:  => 12
      }
    }
  #             1
  #   01234567890123456789
  #  +--------------------
  # 0|class TypesAhoy() {
  # 1|  f match {
  # 2|    case foo:  => 12
  # 3|  }
  # 4|}
  # 5|
  #  +--------------------
  #   01234567890123456789
  #             1
  selections:
    - anchor: {line: 2, character: 14}
      active: {line: 2, character: 14}
