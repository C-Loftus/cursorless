languageId: scala
command:
  version: 0
  spokenForm: change lambda plus
  action: clearAndSetSelection
  targets:
    - type: primitive
      modifier: {type: containingScope, scopeType: anonymousFunction, includeSiblings: false}
      mark: {type: decoratedSymbol, symbolColor: default, character: +}
initialState:
  documentContents: |-
    class ExampleClass() {
      val example = List(1,2,3,4).map((x: Int) => {
        x + 1
      })
    }
  #             1         2         3         4
  #   01234567890123456789012345678901234567890123456
  #  +-----------------------------------------------
  # 0|class ExampleClass() {
  # 1|  val example = List(1,2,3,4).map((x: Int) => {
  # 2|    x + 1
  # 3|  })
  # 4|}
  #  +-----------------------------------------------
  #   01234567890123456789012345678901234567890123456
  #             1         2         3         4
  selections:
    - anchor: {line: 0, character: 0}
      active: {line: 0, character: 0}
  marks:
    default.+:
      start: {line: 2, character: 6}
      end: {line: 2, character: 7}
finalState:
  documentContents: |-
    class ExampleClass() {
      val example = List(1,2,3,4).map()
    }
  #             1         2         3
  #   01234567890123456789012345678901234
  #  +-----------------------------------
  # 0|class ExampleClass() {
  # 1|  val example = List(1,2,3,4).map()
  # 2|}
  selections:
    - anchor: {line: 1, character: 34}
      active: {line: 1, character: 34}
