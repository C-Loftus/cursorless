languageId: scala
command:
  spokenForm: chuck branch sun
  version: 2
  targets:
    - type: primitive
      mark: {type: decoratedSymbol, symbolColor: default, character: s}
      modifiers:
        - type: containingScope
          scopeType: {type: branch}
  usePrePhraseSnapshot: true
  action: {name: remove}
initialState:
  documentContents: |
    def matchTest(x: Int): String = x match {
      case 0 => "zero"
      case 1 => "one"
      case 2 => "two"
      case _ => "other"
    }
  #             1         2         3         4
  #   01234567890123456789012345678901234567890
  #  +-----------------------------------------
  # 0|def matchTest(x: Int): String = x match {
  # 1|  case 0 => "zero"
  # 2|  case 1 => "one"
  # 3|  case 2 => "two"
  # 4|  case _ => "other"
  # 5|}
  # 6|
  #  +-----------------------------------------
  #   01234567890123456789012345678901234567890
  #             1         2         3         4
  selections:
    - anchor: {line: 3, character: 2}
      active: {line: 4, character: 2}
  marks:
    default.s:
      start: {line: 2, character: 2}
      end: {line: 2, character: 6}
finalState:
  documentContents: |
    def matchTest(x: Int): String = x match {
      case 0 => "zero"

      case 2 => "two"
      case _ => "other"
    }
  #             1         2         3         4
  #   01234567890123456789012345678901234567890
  #  +-----------------------------------------
  # 0|def matchTest(x: Int): String = x match {
  # 1|  case 0 => "zero"
  # 2|
  # 3|  case 2 => "two"
  # 4|  case _ => "other"
  # 5|}
  # 6|
  #  +-----------------------------------------
  #   01234567890123456789012345678901234567890
  #             1         2         3         4
  selections:
    - anchor: {line: 3, character: 2}
      active: {line: 4, character: 2}
