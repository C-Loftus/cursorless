languageId: rust
command:
  spokenForm: change type trap
  version: 2
  targets:
    - type: primitive
      mark: {type: decoratedSymbol, symbolColor: default, character: t}
      modifiers:
        - type: containingScope
          scopeType: {type: type}
  usePrePhraseSnapshot: true
  action: {name: clearAndSetSelection}
initialState:
  documentContents: |
    fn some_function<T, U>(t: &T, u: &U) -> i32
        where T: Display + Clone,
              U: Clone + Debug
    {}
  #             1         2         3         4
  #   0123456789012345678901234567890123456789012
  #  +-------------------------------------------
  # 0|fn some_function<T, U>(t: &T, u: &U) -> i32
  # 1|    where T: Display + Clone,
  # 2|          U: Clone + Debug
  # 3|{}
  # 4|
  #  +-------------------------------------------
  #   0123456789012345678901234567890123456789012
  #             1         2         3         4
  selections:
    - anchor: {line: 4, character: 0}
      active: {line: 4, character: 0}
  marks:
    default.t:
      start: {line: 1, character: 10}
      end: {line: 1, character: 11}
finalState:
  documentContents: |
    fn some_function<T, U>(t: &T, u: &U) -> i32
        where T: ,
              U: Clone + Debug
    {}
  #             1         2         3         4
  #   0123456789012345678901234567890123456789012
  #  +-------------------------------------------
  # 0|fn some_function<T, U>(t: &T, u: &U) -> i32
  # 1|    where T: ,
  # 2|          U: Clone + Debug
  # 3|{}
  # 4|
  #  +-------------------------------------------
  #   0123456789012345678901234567890123456789012
  #             1         2         3         4
  selections:
    - anchor: {line: 1, character: 13}
      active: {line: 1, character: 13}
