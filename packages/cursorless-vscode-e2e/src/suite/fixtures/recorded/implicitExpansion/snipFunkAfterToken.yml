languageId: typescript
command:
  spokenForm: snippet funk after token
  version: 2
  targets:
    - type: primitive
      modifiers:
        - {type: position, position: after}
        - type: containingScope
          scopeType: {type: token}
  usePrePhraseSnapshot: true
  action:
    name: insertSnippet
    args: [functionDeclaration]
initialState:
  documentContents: |+
    function myFunction() {
        const whatever = "hello";
    }

  #             1         2
  #   01234567890123456789012345678
  #  +-----------------------------
  # 0|function myFunction() {
  # 1|    const whatever = "hello";
  # 2|}
  # 3|
  # 4|
  #  +-----------------------------
  #   01234567890123456789012345678
  #             1         2
  selections:
    - anchor: {line: 1, character: 10}
      active: {line: 1, character: 18}
  marks: {}
finalState:
  documentContents: |+
    function myFunction() {
        const whatever function () {
            
        } = "hello";
    }

  #             1         2         3
  #   01234567890123456789012345678901
  #  +--------------------------------
  # 0|function myFunction() {
  # 1|    const whatever function () {
  # 2|        
  # 3|    } = "hello";
  # 4|}
  # 5|
  # 6|
  #  +--------------------------------
  #   01234567890123456789012345678901
  #             1         2         3
  selections:
    - anchor: {line: 1, character: 28}
      active: {line: 1, character: 28}
